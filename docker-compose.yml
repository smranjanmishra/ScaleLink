version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - PORT=8080
      - REDIS_URL=redis:6379
      - COCKROACHDB_URL=postgresql://root@cockroachdb:26257/linksprint?sslmode=disable
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - redis
      - cockroachdb
    networks:
      - linksprint-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - linksprint-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # CockroachDB for persistent storage
  cockroachdb:
    image: cockroachdb/cockroach:v23.1.13
    ports:
      - "26257:26257"
      - "8081:8080"
    volumes:
      - cockroach_data:/cockroach/cockroach-data
    networks:
      - linksprint-network
    restart: unless-stopped
    command: start-single-node --insecure --http-addr=:8080

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - linksprint-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - linksprint-network
    restart: unless-stopped

volumes:
  redis_data:
  cockroach_data:
  prometheus_data:
  grafana_data:

networks:
  linksprint-network:
    driver: bridge 